'use strict';

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _through = require('through2');

var _through2 = _interopRequireDefault(_through);

var _html2pug = require('html2pug');

var _html2pug2 = _interopRequireDefault(_html2pug);

var _streamToString = require('stream-to-string');

var _streamToString2 = _interopRequireDefault(_streamToString);

var _gulpUtil = require('gulp-util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// consts
var PLUGIN_NAME = 'gulp-html2pug';

function getHtml(file, enc) {
  if (file.isBuffer()) {
    return _bluebird2.default.resolve(file.contents.toString(enc));
  } else if (file.isStream()) {
    file.contents.setEncoding(enc);
    return (0, _streamToString2.default)(file.contents);
  }

  throw new _gulpUtil.PluginError(PLUGIN_NAME, 'Invalid file');
}

// plugin level function (dealing with files)
function gulpHtml2pug() {
  // creating a stream through which each file will pass
  return _through2.default.obj(function (file, enc, cb) {
    var _this = this;

    var newFile = file.clone();

    getHtml(file, enc).then(function (html) {
      return (0, _html2pug2.default)(html);
    }).then(function (pug) {
      if (file.isBuffer()) {
        newFile.contents = new Buffer(pug);
      } else if (file.isStream()) {
        // start the transformation
        newFile.contents = (0, _through2.default)();
        newFile.contents.write(pug);
        newFile.contents.end();
      } else {
        throw new _gulpUtil.PluginError(PLUGIN_NAME, 'Invalid file');
      }

      var dirname = _path2.default.dirname(file.path);
      var basename = _path2.default.basename(file.path, _path2.default.extname(file.path));
      newFile.path = _path2.default.join(dirname, basename + '.pug');
      // make sure the file goes through the next gulp plugin
      _this.push(newFile);
      cb();
    });
  });
}

// exporting the plugin main function
module.exports = gulpHtml2pug;